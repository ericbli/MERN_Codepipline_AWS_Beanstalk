{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","actions/itemActions.js","components/ShoppingList.js","components/ItemModal.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["returnErrors","msg","status","type","payload","id","arguments","length","undefined","clearErrors","tokenConfig","getState","token","auth","config","headers","Content-type","RegisterModal","state","modal","name","lastname","email","password","toggle","_this","props","setState","onChange","e","Object","defineProperty","target","value","onSubmit","preventDefault","_this$state","newUser","register","prevProps","_this$props","this","error","isAuthenticated","react_default","a","createElement","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","_ref","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","data","catch","err","response","LoginModal","user","login","_ref2","Logout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","react","logout","AppNavbar","_this$props$auth","authLinks","NavItem","concat","auth_Logout","guestLinks","auth_RegisterModal","auth_LoginModal","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemsLoading","ShoppingList","onDeleteClick","deleteItem","getItems","_this2","items","item","ListGroup","react_transition_group","map","_id","timeout","classNames","ListGroupItem","size","bind","get","delete","ItemModal","newItem","addItem","marginBottom","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","objectSpread","filter","toConsumableArray","setItem","removeItem","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","App","es","components_AppNavbar","components_ItemModal","components_ShoppingList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.64c5f30e.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id }\r\n  };\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  };\r\n};\r\n","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL\r\n} from './types';\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get('/api/auth/user', tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, lastname, email, password }) => dispatch => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ name, lastname, email, password });\r\n\r\n  axios\r\n    .post('/api/users', body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => dispatch => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post('/api/auth', body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n  // Get token from localstorage\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  };\r\n\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers['x-auth-token'] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, lastname, email, password } = this.state;\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      name,\r\n      lastname,\r\n      email,\r\n      password\r\n    };\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='name'>Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  placeholder='Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Label for='lasname'> Last Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='lastname'\r\n                  id='lastname'\r\n                  placeholder=' Last Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n\r\n                <Label for='email'>Email</Label>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { register, clearErrors }\r\n)(RegisterModal);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n\r\n    // Attempt to login\r\n    this.props.login(user);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='email'>Email</Label>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login, clearErrors }\r\n)(LoginModal);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink onClick={this.props.logout} href='#'>\r\n          Logout\r\n        </NavLink>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport RegisterModal from './auth/RegisterModal';\r\nimport LoginModal from './auth/LoginModal';\r\nimport Logout from './auth/Logout';\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <span className='navbar-text mr-3'>\r\n            <strong>{user ? `Welcome ${user.name}` : ''}</strong>\r\n          </span>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Logout />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <RegisterModal />\r\n        </NavItem>\r\n        <NavItem>\r\n          <LoginModal />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color='dark' dark expand='sm' className='mb-5'>\r\n          <Container>\r\n            <NavbarBrand href='/'>ShoppingList</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className='ml-auto' navbar>\r\n                {isAuthenticated ? authLinks : guestLinks}\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AppNavbar);\r\n","import axios from 'axios';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\r\nimport { tokenConfig } from './authActions';\r\nimport { returnErrors } from './errorActions';\r\n\r\nexport const getItems = () => dispatch => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .get('/api/items')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const addItem = item => (dispatch, getState) => {\r\n  axios\r\n    .post('/api/items', item, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: ADD_ITEM,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deleteItem = id => (dispatch, getState) => {\r\n  axios\r\n    .delete(`/api/items/${id}`, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: DELETE_ITEM,\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { getItems, deleteItem } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ShoppingList extends Component {\r\n  static propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getItems();\r\n  }\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteItem(id);\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.props.item;\r\n    return (\r\n      <Container>\r\n        <ListGroup>\r\n          <TransitionGroup className='shopping-list'>\r\n            {items.map(({ _id, name }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames='fade'>\r\n                <ListGroupItem>\r\n                  {this.props.isAuthenticated ? (\r\n                    <Button\r\n                      className='remove-btn'\r\n                      color='danger'\r\n                      size='sm'\r\n                      onClick={this.onDeleteClick.bind(this, _id)}\r\n                    >\r\n                      &times;\r\n                    </Button>\r\n                  ) : null}\r\n                  {name}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getItems, deleteItem }\r\n)(ShoppingList);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ItemModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      name: this.state.name\r\n    };\r\n\r\n    // Add item via addItem action\r\n    this.props.addItem(newItem);\r\n\r\n    // Close modal\r\n    this.toggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.isAuthenticated ? (\r\n          <Button\r\n            color='dark'\r\n            style={{ marginBottom: '2rem' }}\r\n            onClick={this.toggle}\r\n          >\r\n            Add Item\r\n          </Button>\r\n        ) : (\r\n          <h4 className='mb-3 ml-4'>Please log in to manage items</h4>\r\n        )}\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='item'>Item</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='item'\r\n                  placeholder='Add shopping item'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Add Item\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addItem }\r\n)(ItemModal);\r\n","import {\r\n  GET_ITEMS,\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  ITEMS_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.payload)\r\n      };\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  item: itemReducer,\r\n  error: errorReducer,\r\n  auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport AppNavbar from './components/AppNavbar';\r\nimport ShoppingList from './components/ShoppingList';\r\nimport ItemModal from './components/ItemModal';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/authActions';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    store.dispatch(loadUser());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className='App'>\r\n          <AppNavbar />\r\n          <Container>\r\n            <ItemModal />\r\n            <ShoppingList />\r\n          </Container>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}