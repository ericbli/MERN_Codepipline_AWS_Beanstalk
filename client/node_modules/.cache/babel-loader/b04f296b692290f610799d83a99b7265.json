{"ast":null,"code":"import _defineProperty from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\acredit_dk\\\\client\\\\src\\\\components\\\\auth\\\\RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nvar RegisterModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterModal, _Component);\n\n  function RegisterModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    _this.toggle = function () {\n      // Clear errors\n      _this.props.clearErrors();\n\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password; // Create user object\n\n      var newUser = {\n        name: name,\n        email: email,\n        password: password\n      }; // Attempt to register\n\n      _this.props.register(newUser);\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterModal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n      if (error !== prevProps.error) {\n        // Check for register error\n        if (error.id === 'REGISTER_FAIL') {\n          this.setState({\n            msg: error.msg.msg\n          });\n        } else {\n          this.setState({\n            msg: null\n          });\n        }\n      } // If authenticated, close modal\n\n\n      if (this.state.modal) {\n        if (isAuthenticated) {\n          this.toggle();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        onClick: this.toggle,\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Register\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.msg ? React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.msg) : null, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Name\",\n        className: \"mb-3\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Email\",\n        className: \"mb-3\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        className: \"mb-3\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"dark\",\n        style: {\n          marginTop: '2rem'\n        },\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Register\"))))));\n    }\n  }]);\n\n  return RegisterModal;\n}(Component);\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  register: register,\n  clearErrors: clearErrors\n})(RegisterModal);","map":{"version":3,"sources":["F:\\acredit_dk\\client\\src\\components\\auth\\RegisterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","PropTypes","register","clearErrors","RegisterModal","state","modal","name","email","password","msg","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","prevProps","error","isAuthenticated","id","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, password } = this.state;\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    };\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='name'>Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  placeholder='Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='email'>Email</Label>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { register, clearErrors }\r\n)(RegisterModal);\r\n"]},"metadata":{},"sourceType":"module"}