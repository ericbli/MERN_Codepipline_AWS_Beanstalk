{"ast":null,"code":"import _defineProperty from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\acredit_dk\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\acredit_dk\\\\client\\\\src\\\\components\\\\ItemModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nvar ItemModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ItemModal, _Component);\n\n  function ItemModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItemModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItemModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      name: ''\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var newItem = {\n        name: _this.state.name\n      }; // Add item via addItem action\n\n      _this.props.addItem(newItem); // Close modal\n\n\n      _this.toggle();\n    };\n\n    return _this;\n  }\n\n  _createClass(ItemModal, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.isAuthenticated ? React.createElement(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '2rem'\n        },\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Add Item\") : React.createElement(\"h4\", {\n        className: \"mb-3 ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Please log in to manage items\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Add To Shopping List\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Item\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"item\",\n        placeholder: \"Add shopping item\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"dark\",\n        style: {\n          marginTop: '2rem'\n        },\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Add Item\"))))));\n    }\n  }]);\n\n  return ItemModal;\n}(Component);\n\nItemModal.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addItem: addItem\n})(ItemModal);","map":{"version":3,"sources":["F:\\acredit_dk\\client\\src\\components\\ItemModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","addItem","PropTypes","ItemModal","state","modal","name","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newItem","props","isAuthenticated","marginBottom","marginTop","propTypes","bool","mapStateToProps","item","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ItemModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      name: this.state.name\r\n    };\r\n\r\n    // Add item via addItem action\r\n    this.props.addItem(newItem);\r\n\r\n    // Close modal\r\n    this.toggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.isAuthenticated ? (\r\n          <Button\r\n            color='dark'\r\n            style={{ marginBottom: '2rem' }}\r\n            onClick={this.toggle}\r\n          >\r\n            Add Item\r\n          </Button>\r\n        ) : (\r\n          <h4 className='mb-3 ml-4'>Please log in to manage items</h4>\r\n        )}\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='item'>Item</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='item'\r\n                  placeholder='Add shopping item'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Add Item\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addItem }\r\n)(ItemModal);\r\n"]},"metadata":{},"sourceType":"module"}